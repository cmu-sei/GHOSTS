{
	"openapi": "3.0.1",
	"info": {
		"title": "GHOSTS API",
		"description": "GHOSTS API v8 - Assembly: 8.0.0.0",
		"contact": {
			"name": "Dustin Updyke",
			"url": "https://sei.cmu.edu",
			"email": "ddupdyke [*at*] sei.cmu.edu"
		},
		"license": {
			"name": "Copyright 2017 Carnegie Mellon University. All Rights Reserved. See LICENSE.md file for terms"
		},
		"version": "v8"
	},
	"paths": {
		"/animations/start": {
			"get": {
				"tags": ["AnimationJobs"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/animations/stop": {
			"get": {
				"tags": ["AnimationJobs"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/animations/status": {
			"get": {
				"tags": ["AnimationJobs"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/animations/output": {
			"get": {
				"tags": ["AnimationJobs"],
				"parameters": [
					{
						"name": "job",
						"in": "query",
						"schema": {
							"$ref": "#/components/schemas/AnimationJobTypes"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/test": {
			"get": {
				"tags": ["Home"],
				"summary": "API Home, often used to verify API is working correctly",
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/install/client/windows": {
			"get": {
				"tags": ["Install"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/install/client/windows/x64": {
			"get": {
				"tags": ["Install"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/install/client/windows/x32": {
			"get": {
				"tags": ["Install"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/install/client/linux": {
			"get": {
				"tags": ["Install"],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machinegroups": {
			"get": {
				"tags": ["MachineGroups"],
				"summary": "Gets the group information and the machines contained therein based on the provided query",
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"description": "Query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Group"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["MachineGroups"],
				"summary": "Create new group",
				"requestBody": {
					"description": "The new group to add",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machinegroups/{id}": {
			"get": {
				"tags": ["MachineGroups"],
				"summary": "Gets the group information and the machines contained therein based on a specific group Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Group Id",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"put": {
				"tags": ["MachineGroups"],
				"summary": "Updates a group's information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The group to update",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Group"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": ["MachineGroups"],
				"summary": "Deletes a specific group",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The group to delete",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machinegroups/{id}/activity": {
			"get": {
				"tags": ["MachineGroups"],
				"summary": "Gets the activity for a group of machines",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Group ID",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"description": "How many records to skip for pagination",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "take",
						"in": "query",
						"description": "How many records to return",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machinegroups/{id}/health": {
			"get": {
				"tags": ["MachineGroups"],
				"summary": "Endpoint returns health records for all of the machines in a group",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Group Id",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machines": {
			"get": {
				"tags": ["Machines"],
				"summary": "Gets machines matching the provided query value",
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"description": "Query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"post": {
				"tags": ["Machines"],
				"summary": "Create a machine on the range\r\n(warning: GHOSTS cannot control this machine unless its client later checks in with the same information created here)",
				"requestBody": {
					"description": "The machine to create",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machines/list": {
			"get": {
				"tags": ["Machines"],
				"summary": "Gets all machines in the system\r\n(warning: this may be a large amount of data based on the size of your range)",
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machines/{id}": {
			"get": {
				"tags": ["Machines"],
				"summary": "Gets a specific machine by its Guid",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Machine Guid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"put": {
				"tags": ["Machines"],
				"summary": "Updates a machine's information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The machine record to update",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Machine"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": ["Machines"],
				"summary": "Deletes a machine (warning: If the machine later checks in, the record will be re-created)",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Id of the machine to delete",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machines/{id}/activity": {
			"get": {
				"tags": ["Machines"],
				"summary": "Lists the activity for a given machine",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The machine to get activity for",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"description": "How many records to skip for pagination",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "take",
						"in": "query",
						"description": "How many records to return",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machines/{id}/health": {
			"get": {
				"tags": ["Machines"],
				"summary": "Gets the health for a particular machine",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Machine Guid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machineupdates": {
			"post": {
				"tags": ["MachineUpdates"],
				"summary": "Sends a command for machine to perform,\r\ne.g. health or timeLine updates, or post back current timeLine",
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdate"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdate"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdate"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdate"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/machineupdates/group/{groupId}": {
			"post": {
				"tags": ["MachineUpdates"],
				"summary": "Send a new timeLine to an entire group of machines",
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "Group Id",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"description": "The update to send",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "ab7ce039-eb54-4aa0-ac96-14a130776dde",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.6976334Z",
								"status": "Active",
								"update": {
									"id": "4b04cb4f-6f23-4552-82dc-c4421a65fe7a",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "ab7ce039-eb54-4aa0-ac96-14a130776dde",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.6976334Z",
								"status": "Active",
								"update": {
									"id": "4b04cb4f-6f23-4552-82dc-c4421a65fe7a",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "ab7ce039-eb54-4aa0-ac96-14a130776dde",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.6976334Z",
								"status": "Active",
								"update": {
									"id": "4b04cb4f-6f23-4552-82dc-c4421a65fe7a",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "ab7ce039-eb54-4aa0-ac96-14a130776dde",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.6976334Z",
								"status": "Active",
								"update": {
									"id": "4b04cb4f-6f23-4552-82dc-c4421a65fe7a",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/machineupdates/{updateId}": {
			"get": {
				"tags": ["MachineUpdates"],
				"parameters": [
					{
						"name": "updateId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineUpdate"
								}
							}
						}
					}
				}
			}
		},
		"/api/machineupdates/machine/{machineId}": {
			"get": {
				"tags": ["MachineUpdates"],
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MachineUpdate"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/machineupdates/type/{type}": {
			"get": {
				"tags": ["MachineUpdates"],
				"parameters": [
					{
						"name": "type",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UpdateType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MachineUpdate"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/machineupdates/status/{status}": {
			"get": {
				"tags": ["MachineUpdates"],
				"parameters": [
					{
						"name": "status",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/StatusType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MachineUpdate"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Returns all generated NPCs in the system (caution, could return a large amount of data)",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcRecord"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Npcs"],
				"summary": "Create one NPC (handy for syncing up from ghosts core api)",
				"parameters": [
					{
						"name": "generate",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/NpcProfile"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NpcProfile"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/NpcProfile"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/NpcProfile"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NpcRecord"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/list": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Returns name and Id for all NPCs in the system (caution, could return a large amount of data)",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcNameId"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/{id}": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Get NPC by specific Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NpcRecord"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Npcs"],
				"summary": "Delete NPC by specific Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/npcs/{id}/photo": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Get NPC photo by specific Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IActionResult"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/npc/{npcId}": {
			"post": {
				"tags": ["Npcs"],
				"summary": "Get a subset of details about a specific NPC",
				"parameters": [
					{
						"name": "npcId",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"text/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"application/*+json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/npcs/{campaign}/{enclave}": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Gets all NPCs by from a specific enclave that is part of a specific campaign",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "The name of the campaign the enclave is part of",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "The name of the enclave",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcRecord"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Npcs"],
				"summary": "Delete All NPCs in a specific enclave",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/npcs/{campaign}/{enclave}/csv": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Gets the csv output of a query",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "The name of the campaign the enclave is part of",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "The name of the enclave",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IActionResult"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/{campaign}/{enclave}/custom": {
			"post": {
				"tags": ["Npcs"],
				"summary": "Get a CSV file containing all of the requested properties of NPCs in an enclave",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"text/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"application/*+json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/npcs/{campaign}/{enclave}/{team}": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Gets all NPCs by from a specific team in a specific enclave that is part of a specific campaign",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "The name of the campaign the enclave is part of",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "The name of the enclave the team is in",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "team",
						"in": "path",
						"description": "The name of the team",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcRecord"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Npcs"],
				"summary": "Delete All NPCs in a specific team",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "team",
						"in": "path",
						"description": "",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/npcs/{campaign}/{enclave}/{team}/csv": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Gets the csv output of a query",
				"parameters": [
					{
						"name": "campaign",
						"in": "path",
						"description": "The name of the campaign the enclave is part of",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "enclave",
						"in": "path",
						"description": "The name of the enclave the team is in",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "team",
						"in": "path",
						"description": "The name of the team",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IActionResult"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/tfvars": {
			"post": {
				"tags": ["Npcs"],
				"summary": "Gets the tfvars output of a team of NPCs",
				"requestBody": {
					"description": "",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/TfVarsConfiguration"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TfVarsConfiguration"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/TfVarsConfiguration"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/TfVarsConfiguration"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IActionResult"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/insiderthreat": {
			"post": {
				"tags": ["Npcs"],
				"summary": "Create an insider threat specific NPC build",
				"requestBody": {
					"description": "",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/InsiderThreatGenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Friesen, Runolfsdottir and Tromp",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InsiderThreatGenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Friesen, Runolfsdottir and Tromp",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/InsiderThreatGenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Friesen, Runolfsdottir and Tromp",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/InsiderThreatGenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Friesen, Runolfsdottir and Tromp",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcRecord"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/npcs/insiderthreat/csv": {
			"get": {
				"tags": ["Npcs"],
				"summary": "Export insider threat specific csv file",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IActionResult"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcsgenerate": {
			"get": {
				"tags": ["NpcsGenerate"],
				"summary": "Returns all NPCs at the specified level - Campaign, Enclave, or Team",
				"parameters": [
					{
						"name": "key",
						"in": "query",
						"description": "campaign, enclave, team",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcProfile"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["NpcsGenerate"],
				"summary": "Create NPCs belonging to a campaign, enclave and team based on configuration",
				"requestBody": {
					"description": "",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/GenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Beer, Huel and Kozey",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Beer, Huel and Kozey",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Beer, Huel and Kozey",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/GenerationConfiguration"
							},
							"example": {
								"campaign": "Exercise Season 2024",
								"enclaves": [
									{
										"name": "Brigade Beer, Huel and Kozey",
										"teams": [
											{
												"npcs": {
													"number": 10,
													"configuration": {
														"branch": "USARMY",
														"rankDistribution": [],
														"unit": "",
														"username": null,
														"preferenceSettings": null
													}
												},
												"name": "Engineering",
												"machineNameTemplate": "eng{machine_number}",
												"domainTemplate": "eng{machine_number}-brigade.unit.co",
												"preferenceSettings": null
											}
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NpcProfile"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/npcsgenerate/one": {
			"post": {
				"tags": ["NpcsGenerate"],
				"summary": "Generate random NPC by random service branch",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NpcProfile"
								}
							}
						}
					}
				}
			}
		},
		"/api/npcsgenerate/syncwithmachineusernames": {
			"post": {
				"tags": ["NpcsGenerate"],
				"summary": "Ensures an NPC is created for each and every machine currentusername that exists",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NpcProfile"
								}
							}
						}
					}
				}
			}
		},
		"/surveys/{machineId}": {
			"get": {
				"tags": ["Surveys"],
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/plain": {
								"schema": {
									"$ref": "#/components/schemas/Survey"
								}
							},
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Survey"
								}
							},
							"text/json": {
								"schema": {
									"$ref": "#/components/schemas/Survey"
								}
							}
						}
					}
				}
			}
		},
		"/surveys/{machineId}/all": {
			"get": {
				"tags": ["Surveys"],
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/plain": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Survey"
									}
								}
							},
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Survey"
									}
								}
							},
							"text/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Survey"
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/timelines/{machineId}": {
			"get": {
				"tags": ["TimeLines"],
				"summary": "This returns all timeLines for a requested machine. If all or a specific timeLine is not available,\r\na MachineUpdate request can be made to retrieve the machine timeLines",
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"description": "Machine Guid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/plain": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"text/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							}
						}
					}
				}
			}
		},
		"/api/timelines/updates": {
			"get": {
				"tags": ["TimeLines"],
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/plain": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"text/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							}
						}
					}
				}
			}
		},
		"/api/timelines/{machineId}/{timeLineId}": {
			"get": {
				"tags": ["TimeLines"],
				"summary": "This returns a specific timeLine for a requested machine. If the timeLine is not available,\r\na MachineUpdate request can be made to retrieve the machine timeLine",
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"description": "Machine Guid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "timeLineId",
						"in": "path",
						"description": "TimeLine Id Guid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"text/plain": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							},
							"text/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineTimeLine"
								}
							}
						}
					}
				}
			}
		},
		"/api/timelines": {
			"post": {
				"tags": ["TimeLines"],
				"summary": "Send a new timeLine to a particular machine",
				"requestBody": {
					"description": "The update to send",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "eae2268d-96ef-4a8d-9c54-e43339cb90f7",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.7536432Z",
								"status": "Active",
								"update": {
									"id": "9dd5ba70-f01b-43a9-bc1e-908b9b80964b",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "eae2268d-96ef-4a8d-9c54-e43339cb90f7",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.7536432Z",
								"status": "Active",
								"update": {
									"id": "9dd5ba70-f01b-43a9-bc1e-908b9b80964b",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "eae2268d-96ef-4a8d-9c54-e43339cb90f7",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.7536432Z",
								"status": "Active",
								"update": {
									"id": "9dd5ba70-f01b-43a9-bc1e-908b9b80964b",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/MachineUpdateViewModel"
							},
							"example": {
								"machineId": "eae2268d-96ef-4a8d-9c54-e43339cb90f7",
								"type": "TimeLinePartial",
								"activeUtc": "2024-04-17T11:57:04.7536432Z",
								"status": "Active",
								"update": {
									"id": "9dd5ba70-f01b-43a9-bc1e-908b9b80964b",
									"status": "Run",
									"timeLineHandlers": [
										{
											"handlerType": "BrowserFirefox",
											"initial": "https://cmu.edu",
											"utcTimeOn": "00:00:00",
											"utcTimeOff": "23:59:59",
											"handlerArgs": {},
											"loop": true,
											"timeLineEvents": [
												{
													"command": "browse",
													"commandArgs": ["https://sei.cmu.edu"],
													"delayAfter": 30000,
													"delayBefore": 0
												}
											],
											"scheduleType": "Other"
										}
									]
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/timelines/{machineId}/{timeLineId}/stop": {
			"post": {
				"tags": ["TimeLines"],
				"parameters": [
					{
						"name": "machineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "timeLineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/trackables": {
			"get": {
				"tags": ["Trackables"],
				"summary": "Gets all trackables in the system",
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/trackables/{id}": {
			"get": {
				"tags": ["Trackables"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/webhooks": {
			"get": {
				"tags": ["Webhooks"],
				"summary": "Gets all of the webhooks currently active on the system",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Webhook"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Webhooks"],
				"summary": "Create a new webhook",
				"requestBody": {
					"description": "The webhook to create",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/webhooks/{id}": {
			"get": {
				"tags": ["Webhooks"],
				"summary": "Gets a specific webhook by its Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The webhook to retrieve",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"put": {
				"tags": ["Webhooks"],
				"summary": "Updates a specific webhook",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The specific webhook to update",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"description": "The update to make",
					"content": {
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"text/json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						},
						"application/*+json": {
							"schema": {
								"$ref": "#/components/schemas/Webhook"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": ["Webhooks"],
				"summary": "Delete a specfic webhook by its Id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Id of the webhook to delete",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/webhooks/{id}/test": {
			"get": {
				"tags": ["Webhooks"],
				"summary": "For webhook testing",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The Id to test",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/webhooks/{webhookid}/test/{historytimeLineid}": {
			"get": {
				"tags": ["Webhooks"],
				"summary": "Gets a test instance of a webhook",
				"parameters": [
					{
						"name": "webhookid",
						"in": "path",
						"description": "The Id of the webhook",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "historytimeLineid",
						"in": "path",
						"description": "The timeLine item to hook",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AccessProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					},
					"securityClearance": {
						"type": "string",
						"nullable": true
					},
					"physicalAccess": {
						"type": "string",
						"nullable": true
					},
					"systemsAccess": {
						"type": "string",
						"nullable": true
					},
					"isDoDSystemsPrivilegedUser": {
						"type": "boolean",
						"nullable": true
					},
					"explosivesAccess": {
						"type": "string",
						"nullable": true
					},
					"cbrnAccess": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Account": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"url": {
						"type": "string",
						"nullable": true
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"AddressProfile": {
				"type": "object",
				"properties": {
					"addressType": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"address1": {
						"type": "string",
						"nullable": true
					},
					"address2": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"state": {
						"type": "string",
						"nullable": true
					},
					"postalCode": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"AnimationJobTypes": {
				"enum": [
					"SOCIALGRAPH",
					"SOCIALSHARING",
					"SOCIALBELIEF",
					"CHAT",
					"FULLAUTONOMY"
				],
				"type": "string"
			},
			"BiologicalSex": {
				"enum": ["Female", "Male"],
				"type": "string"
			},
			"CareerProfile": {
				"type": "object",
				"properties": {
					"workEthic": {
						"type": "integer",
						"format": "int32"
					},
					"teamValue": {
						"type": "integer",
						"format": "int32"
					},
					"strengths": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/StrengthProfile"
						},
						"nullable": true
					},
					"weaknesses": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WeaknessProfile"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"CreditCard": {
				"type": "object",
				"properties": {
					"number": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"CriminalViolentOrAbusiveConductProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Degree": {
				"type": "object",
				"properties": {
					"level": {
						"$ref": "#/components/schemas/DegreeLevel"
					},
					"degreeType": {
						"type": "string",
						"nullable": true
					},
					"major": {
						"type": "string",
						"nullable": true
					},
					"school": {
						"$ref": "#/components/schemas/School"
					}
				},
				"additionalProperties": false
			},
			"DegreeLevel": {
				"enum": [
					"GED",
					"HSDiploma",
					"Associates",
					"Bachelors",
					"Masters",
					"Doctorate",
					"Professional",
					"None"
				],
				"type": "string"
			},
			"DriveInfo": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"availableFreeSpace": {
						"type": "integer",
						"format": "int64"
					},
					"driveFormat": {
						"type": "string",
						"nullable": true
					},
					"driveType": {
						"type": "string",
						"nullable": true
					},
					"isReady": {
						"type": "boolean"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"rootDirectory": {
						"type": "string",
						"nullable": true
					},
					"totalFreeSpace": {
						"type": "integer",
						"format": "int64"
					},
					"totalSize": {
						"type": "integer",
						"format": "int64"
					},
					"volumeLabel": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"EducationProfile": {
				"type": "object",
				"properties": {
					"degrees": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Degree"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"EmploymentProfile": {
				"type": "object",
				"properties": {
					"employmentRecords": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EmploymentRecord"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"EmploymentRecord": {
				"type": "object",
				"properties": {
					"company": {
						"type": "string",
						"nullable": true
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"department": {
						"type": "string",
						"nullable": true
					},
					"organization": {
						"type": "string",
						"nullable": true
					},
					"jobTitle": {
						"type": "string",
						"nullable": true
					},
					"level": {
						"type": "integer",
						"format": "int32"
					},
					"salary": {
						"type": "number",
						"format": "double"
					},
					"manager": {
						"type": "string",
						"format": "uuid"
					},
					"emailSuffix": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"$ref": "#/components/schemas/AddressProfile"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"employmentStatus": {
						"$ref": "#/components/schemas/EmploymentStatuses"
					}
				},
				"additionalProperties": false
			},
			"EmploymentStatuses": {
				"enum": [
					"FullTime",
					"PartTime",
					"Suspended",
					"Temporary",
					"Terminated",
					"Resigned"
				],
				"type": "string"
			},
			"EnclaveConfiguration": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					},
					"teams": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TeamConfiguration"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"EventLog": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EventLogEntry"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"EventLogEntry": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"eventLogId": {
						"type": "integer",
						"format": "int32"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"entryType": {
						"type": "string",
						"nullable": true
					},
					"source": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"FamilyProfile": {
				"type": "object",
				"properties": {
					"members": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Person"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"FinancialConsiderationsProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"FinancialProfile": {
				"type": "object",
				"properties": {
					"netWorth": {
						"type": "number",
						"format": "double"
					},
					"totalDebt": {
						"type": "number",
						"format": "double"
					},
					"creditCards": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CreditCard"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"ForeignConsiderationsProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"ForeignTravelProfile": {
				"type": "object",
				"properties": {
					"trips": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Trip"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"GenerationConfiguration": {
				"type": "object",
				"properties": {
					"campaign": {
						"type": "string",
						"nullable": true
					},
					"enclaves": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnclaveConfiguration"
						},
						"nullable": true
					}
				},
				"additionalProperties": false,
				"description": "The configuration for generating a large number of NPCs for your scenario"
			},
			"Group": {
				"required": ["name"],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"minLength": 1,
						"type": "string"
					},
					"groupMachines": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/GroupMachine"
						},
						"nullable": true
					},
					"status": {
						"$ref": "#/components/schemas/StatusType"
					},
					"machines": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Machine"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"GroupMachine": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"groupId": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					}
				},
				"additionalProperties": false
			},
			"HandlerType": {
				"enum": [
					"BrowserFirefox",
					"BrowserChrome",
					"Command",
					"Notepad",
					"Outlook",
					"Word",
					"Excel",
					"PowerPoint",
					"NpcSystem",
					"Reboot",
					"Curl",
					"Clicks",
					"Watcher",
					"LightWord",
					"LightExcel",
					"LightPowerPoint",
					"PowerShell",
					"Bash",
					"Print",
					"Ssh",
					"Sftp",
					"Pidgin",
					"Rdp",
					"Wmi",
					"Outlookv2",
					"Ftp",
					"AwsCli"
				],
				"type": "string"
			},
			"HealthProfile": {
				"type": "object",
				"properties": {
					"height": {
						"type": "integer",
						"format": "int32"
					},
					"weight": {
						"type": "integer",
						"format": "int32"
					},
					"bloodType": {
						"type": "string",
						"nullable": true
					},
					"preferredMeal": {
						"type": "string",
						"nullable": true
					},
					"medicalConditions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MedicalCondition"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"HistoryHealth": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"internet": {
						"type": "boolean",
						"nullable": true
					},
					"permissions": {
						"type": "boolean",
						"nullable": true
					},
					"executionTime": {
						"type": "integer",
						"format": "int64"
					},
					"errors": {
						"type": "string",
						"nullable": true
					},
					"loggedOnUsers": {
						"type": "string",
						"nullable": true
					},
					"stats": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"HistoryTimeLine": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"handler": {
						"type": "string",
						"nullable": true
					},
					"command": {
						"type": "string",
						"nullable": true
					},
					"commandArg": {
						"type": "string",
						"nullable": true
					},
					"result": {
						"type": "string",
						"nullable": true
					},
					"tags": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"HistoryTrackable": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"trackableId": {
						"type": "string",
						"format": "uuid"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"handler": {
						"type": "string",
						"nullable": true
					},
					"command": {
						"type": "string",
						"nullable": true
					},
					"commandArg": {
						"type": "string",
						"nullable": true
					},
					"result": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"HistoryType": {
				"enum": [
					"Created",
					"RequestedId",
					"Resynched",
					"RequestedUpdates",
					"SentNewTimeLine",
					"PostedResults"
				],
				"type": "string"
			},
			"IActionResult": {
				"type": "object",
				"additionalProperties": false
			},
			"InsiderThreatGenerationConfiguration": {
				"type": "object",
				"properties": {
					"campaign": {
						"type": "string",
						"nullable": true
					},
					"enclaves": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnclaveConfiguration"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"InsiderThreatProfile": {
				"type": "object",
				"properties": {
					"access": {
						"$ref": "#/components/schemas/AccessProfile"
					},
					"criminalViolentOrAbusiveConduct": {
						"$ref": "#/components/schemas/CriminalViolentOrAbusiveConductProfile"
					},
					"financialConsiderations": {
						"$ref": "#/components/schemas/FinancialConsiderationsProfile"
					},
					"foreignConsiderations": {
						"$ref": "#/components/schemas/ForeignConsiderationsProfile"
					},
					"judgementCharacterAndPsychologicalConditions": {
						"$ref": "#/components/schemas/JudgementCharacterAndPsychologicalConditionsProfile"
					},
					"professionalLifecycleAndPerformance": {
						"$ref": "#/components/schemas/ProfessionalLifecycleAndPerformanceProfile"
					},
					"securityAndComplianceIncidents": {
						"$ref": "#/components/schemas/SecurityAndComplianceIncidentsProfile"
					},
					"substanceAbuseAndAddictiveBehaviors": {
						"$ref": "#/components/schemas/SubstanceAbuseAndAddictiveBehaviorsProfile"
					},
					"technicalActivity": {
						"$ref": "#/components/schemas/TechnicalActivityProfile"
					},
					"isBackgroundCheckStatusClear": {
						"type": "boolean"
					}
				},
				"additionalProperties": false
			},
			"Interface": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"bindings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/InterfaceBinding"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"InterfaceBinding": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"interfaceId": {
						"type": "integer",
						"format": "int32"
					},
					"internetAddress": {
						"type": "string",
						"nullable": true
					},
					"physicalAddress": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"JudgementCharacterAndPsychologicalConditionsProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"LocalProcess": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"privateMemorySize64": {
						"type": "integer",
						"format": "int64"
					},
					"mainWindowTitle": {
						"type": "string",
						"nullable": true
					},
					"processName": {
						"type": "string",
						"nullable": true
					},
					"startTime": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"fileName": {
						"type": "string",
						"nullable": true
					},
					"owner": {
						"type": "string",
						"nullable": true
					},
					"ownerDomain": {
						"type": "string",
						"nullable": true
					},
					"ownerSid": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"LocalUser": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"domain": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Machine": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"fqdn": {
						"type": "string",
						"nullable": true
					},
					"domain": {
						"type": "string",
						"nullable": true
					},
					"host": {
						"type": "string",
						"nullable": true
					},
					"resolvedHost": {
						"type": "string",
						"nullable": true
					},
					"hostIp": {
						"type": "string",
						"nullable": true
					},
					"ipAddress": {
						"type": "string",
						"nullable": true
					},
					"currentUsername": {
						"type": "string",
						"nullable": true
					},
					"clientVersion": {
						"type": "string",
						"nullable": true
					},
					"history": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MachineHistoryItem"
						},
						"nullable": true
					},
					"historyHealth": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HistoryHealth"
						},
						"nullable": true
					},
					"historyTimeLine": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HistoryTimeLine"
						},
						"nullable": true
					},
					"historyTrackables": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HistoryTrackable"
						},
						"nullable": true
					},
					"status": {
						"$ref": "#/components/schemas/StatusType"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time",
						"readOnly": true
					},
					"statusMessage": {
						"type": "string",
						"nullable": true,
						"readOnly": true
					},
					"statusUp": {
						"$ref": "#/components/schemas/UpDownStatus"
					},
					"lastReportedUtc": {
						"type": "string",
						"format": "date-time"
					},
					"hadId": {
						"type": "boolean"
					}
				},
				"additionalProperties": false
			},
			"MachineHistoryItem": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"type": {
						"$ref": "#/components/schemas/HistoryType"
					},
					"object": {
						"type": "string",
						"nullable": true
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					}
				},
				"additionalProperties": false
			},
			"MachineProfile": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					},
					"domain": {
						"type": "string",
						"nullable": true
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string",
						"nullable": true
					},
					"ipAddress": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"MachineTimeLine": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"timeLine": {
						"type": "string",
						"description": "This is a string unfortunately, because EF can't handle string arrays, etc.",
						"nullable": true
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					}
				},
				"additionalProperties": false
			},
			"MachineUpdate": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"$ref": "#/components/schemas/UpdateType"
					},
					"activeUtc": {
						"type": "string",
						"format": "date-time"
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/StatusType"
					},
					"update": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"MachineUpdateViewModel": {
				"type": "object",
				"properties": {
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"type": {
						"$ref": "#/components/schemas/UpdateType"
					},
					"activeUtc": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"$ref": "#/components/schemas/StatusType"
					},
					"update": {
						"$ref": "#/components/schemas/TimeLine"
					}
				},
				"additionalProperties": false
			},
			"MedicalCondition": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					},
					"prescriptions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Prescription"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"MentalHealthProfile": {
				"type": "object",
				"properties": {
					"interpersonalSkills": {
						"type": "integer",
						"format": "int32"
					},
					"adherenceToPolicy": {
						"type": "integer",
						"format": "int32"
					},
					"enthusiasmAndAttitude": {
						"type": "integer",
						"format": "int32"
					},
					"openToFeedback": {
						"type": "integer",
						"format": "int32"
					},
					"generalPerformance": {
						"type": "integer",
						"format": "int32"
					},
					"overallPerformance": {
						"type": "integer",
						"format": "int32"
					},
					"iq": {
						"type": "integer",
						"format": "int32"
					},
					"spideySense": {
						"type": "integer",
						"format": "int32"
					},
					"senseSomethingIsWrongQuotient": {
						"type": "integer",
						"format": "int32"
					},
					"happyQuotient": {
						"type": "integer",
						"format": "int32"
					},
					"melancholyQuotient": {
						"type": "integer",
						"format": "int32"
					}
				},
				"additionalProperties": false
			},
			"MilitaryBranch": {
				"enum": ["USAF", "USARMY", "USCG", "USMC", "USN"],
				"type": "string"
			},
			"MilitaryUnit": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"$ref": "#/components/schemas/AddressProfile"
					},
					"sub": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Unit"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"MotivationalProfile": {
				"type": "object",
				"properties": {
					"acceptance": {
						"type": "number",
						"format": "double"
					},
					"beauty": {
						"type": "number",
						"format": "double"
					},
					"curiosity": {
						"type": "number",
						"format": "double"
					},
					"eating": {
						"type": "number",
						"format": "double"
					},
					"family": {
						"type": "number",
						"format": "double"
					},
					"honor": {
						"type": "number",
						"format": "double"
					},
					"idealism": {
						"type": "number",
						"format": "double"
					},
					"independence": {
						"type": "number",
						"format": "double"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"physicalActivity": {
						"type": "number",
						"format": "double"
					},
					"power": {
						"type": "number",
						"format": "double"
					},
					"saving": {
						"type": "number",
						"format": "double"
					},
					"socialContact": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"tranquility": {
						"type": "number",
						"format": "double"
					},
					"vengeance": {
						"type": "number",
						"format": "double"
					}
				},
				"additionalProperties": false
			},
			"NameProfile": {
				"type": "object",
				"properties": {
					"prefix": {
						"type": "string",
						"nullable": true
					},
					"first": {
						"type": "string",
						"nullable": true
					},
					"middle": {
						"type": "string",
						"nullable": true
					},
					"last": {
						"type": "string",
						"nullable": true
					},
					"suffix": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"NpcConfiguration": {
				"type": "object",
				"properties": {
					"number": {
						"type": "integer",
						"description": "The number of NPCs to generate",
						"format": "int32"
					},
					"configuration": {
						"$ref": "#/components/schemas/NpcGenerationConfiguration"
					}
				},
				"additionalProperties": false,
				"description": "NPC generation configuration"
			},
			"NpcGenerationConfiguration": {
				"type": "object",
				"properties": {
					"branch": {
						"$ref": "#/components/schemas/MilitaryBranch"
					},
					"rankDistribution": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RankDistribution"
						},
						"nullable": true
					},
					"unit": {
						"type": "string",
						"nullable": true
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"preferenceSettings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PreferenceOption"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"NpcNameId": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"NpcProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"$ref": "#/components/schemas/NameProfile"
					},
					"address": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AddressProfile"
						},
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string",
						"nullable": true
					},
					"homePhone": {
						"type": "string",
						"nullable": true
					},
					"cellPhone": {
						"type": "string",
						"nullable": true
					},
					"preferences": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Preference"
						},
						"nullable": true
					},
					"unit": {
						"$ref": "#/components/schemas/MilitaryUnit"
					},
					"rank": {
						"$ref": "#/components/schemas/Rank"
					},
					"education": {
						"$ref": "#/components/schemas/EducationProfile"
					},
					"employment": {
						"$ref": "#/components/schemas/EmploymentProfile"
					},
					"biologicalSex": {
						"$ref": "#/components/schemas/BiologicalSex"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"health": {
						"$ref": "#/components/schemas/HealthProfile"
					},
					"attributes": {
						"type": "object",
						"additionalProperties": {
							"type": "string",
							"nullable": true
						},
						"nullable": true
					},
					"relationships": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelationshipProfile"
						},
						"nullable": true
					},
					"family": {
						"$ref": "#/components/schemas/FamilyProfile"
					},
					"finances": {
						"$ref": "#/components/schemas/FinancialProfile"
					},
					"mentalHealth": {
						"$ref": "#/components/schemas/MentalHealthProfile"
					},
					"foreignTravel": {
						"$ref": "#/components/schemas/ForeignTravelProfile"
					},
					"career": {
						"$ref": "#/components/schemas/CareerProfile"
					},
					"workstation": {
						"$ref": "#/components/schemas/MachineProfile"
					},
					"insiderThreat": {
						"$ref": "#/components/schemas/InsiderThreatProfile"
					},
					"accounts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Account"
						},
						"nullable": true
					},
					"motivationalProfile": {
						"$ref": "#/components/schemas/MotivationalProfile"
					},
					"cac": {
						"type": "string",
						"nullable": true
					},
					"photoLink": {
						"type": "string",
						"nullable": true
					},
					"created": {
						"type": "string",
						"format": "date-time"
					}
				},
				"additionalProperties": false
			},
			"NpcRecord": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"machineId": {
						"type": "string",
						"format": "uuid",
						"nullable": true
					},
					"campaign": {
						"type": "string",
						"description": "Used for grouping NPCs together, e.g. 2020, 2021",
						"nullable": true
					},
					"enclave": {
						"type": "string",
						"description": "Used for grouping NPCs together, e.g.\r\nWe could call this a group but in order\r\nto be more specific we use enclave.",
						"nullable": true
					},
					"team": {
						"type": "string",
						"description": "Used for grouping NPCs together, e.g. \r\nA team within an enclave",
						"nullable": true
					},
					"npcProfile": {
						"$ref": "#/components/schemas/NpcProfile"
					}
				},
				"additionalProperties": false
			},
			"Person": {
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/components/schemas/NameProfile"
					},
					"relationship": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Port": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"surveyId": {
						"type": "integer",
						"format": "int32"
					},
					"localPort": {
						"type": "string",
						"nullable": true
					},
					"localAddress": {
						"type": "string",
						"nullable": true
					},
					"foreignAddress": {
						"type": "string",
						"nullable": true
					},
					"foreignPort": {
						"type": "string",
						"nullable": true
					},
					"pid": {
						"type": "integer",
						"format": "int32"
					},
					"process": {
						"type": "string",
						"nullable": true
					},
					"protocol": {
						"type": "string",
						"nullable": true
					},
					"state": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Preference": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"score": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"meta": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"PreferenceOption": {
				"type": "object",
				"properties": {
					"score": {
						"type": "integer",
						"format": "int32"
					},
					"scoreHigh": {
						"type": "integer",
						"format": "int32"
					},
					"scoreLow": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"meta": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Prescription": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"ProfessionalLifecycleAndPerformanceProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Rank": {
				"type": "object",
				"properties": {
					"branch": {
						"$ref": "#/components/schemas/MilitaryBranch"
					},
					"pay": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"abbr": {
						"type": "string",
						"nullable": true
					},
					"classification": {
						"type": "string",
						"nullable": true
					},
					"billet": {
						"type": "string",
						"nullable": true
					},
					"mos": {
						"type": "string",
						"nullable": true
					},
					"mosid": {
						"type": "string",
						"nullable": true
					},
					"probability": {
						"type": "number",
						"format": "double"
					}
				},
				"additionalProperties": false
			},
			"RankDistribution": {
				"type": "object",
				"properties": {
					"payGrade": {
						"type": "string",
						"nullable": true
					},
					"probability": {
						"type": "number",
						"format": "double"
					},
					"minimum": {
						"type": "integer",
						"format": "int32"
					}
				},
				"additionalProperties": false
			},
			"RelatedEvent": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"correctiveAction": {
						"type": "string",
						"nullable": true
					},
					"reportedBy": {
						"type": "string",
						"nullable": true
					},
					"reported": {
						"type": "string",
						"format": "date-time"
					}
				},
				"additionalProperties": false
			},
			"RelationshipProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"with": {
						"type": "string",
						"format": "uuid"
					},
					"type": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"School": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					},
					"location": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"SecurityAndComplianceIncidentsProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"StatusType": {
				"enum": ["Active", "Deleted"],
				"type": "string"
			},
			"StrengthProfile": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"SubstanceAbuseAndAddictiveBehaviorsProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Survey": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"machineId": {
						"type": "string",
						"format": "uuid"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"uptime": {
						"$ref": "#/components/schemas/TimeSpan"
					},
					"interfaces": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Interface"
						},
						"nullable": true
					},
					"localUsers": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LocalUser"
						},
						"nullable": true
					},
					"drives": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DriveInfo"
						},
						"nullable": true
					},
					"processes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LocalProcess"
						},
						"nullable": true
					},
					"eventLogs": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EventLog"
						},
						"nullable": true
					},
					"ports": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Port"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TeamConfiguration": {
				"type": "object",
				"properties": {
					"npcs": {
						"$ref": "#/components/schemas/NpcConfiguration"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"machineNameTemplate": {
						"type": "string",
						"nullable": true
					},
					"domainTemplate": {
						"type": "string",
						"nullable": true
					},
					"preferenceSettings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PreferenceOption"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TechnicalActivityProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"relatedEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RelatedEvent"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TfVarsConfiguration": {
				"type": "object",
				"properties": {
					"campaign": {
						"type": "string",
						"nullable": true
					},
					"enclave": {
						"type": "string",
						"nullable": true
					},
					"team": {
						"type": "string",
						"nullable": true
					},
					"ipAddressHigh": {
						"type": "string",
						"nullable": true
					},
					"ipAddressLow": {
						"type": "string",
						"nullable": true
					},
					"gateway": {
						"type": "string",
						"nullable": true
					},
					"mask": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TimeSpan": {
				"type": "object",
				"properties": {
					"ticks": {
						"type": "integer",
						"format": "int64"
					},
					"days": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"hours": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"milliseconds": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"minutes": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"seconds": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"totalDays": {
						"type": "number",
						"format": "double",
						"readOnly": true
					},
					"totalHours": {
						"type": "number",
						"format": "double",
						"readOnly": true
					},
					"totalMilliseconds": {
						"type": "number",
						"format": "double",
						"readOnly": true
					},
					"totalMinutes": {
						"type": "number",
						"format": "double",
						"readOnly": true
					},
					"totalSeconds": {
						"type": "number",
						"format": "double",
						"readOnly": true
					}
				},
				"additionalProperties": false
			},
			"TimeLine": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"status": {
						"$ref": "#/components/schemas/TimeLineStatus"
					},
					"timeLineHandlers": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TimeLineHandler"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TimeLineEvent": {
				"type": "object",
				"properties": {
					"trackableId": {
						"type": "string",
						"nullable": true
					},
					"command": {
						"type": "string",
						"nullable": true
					},
					"commandArgs": {
						"type": "array",
						"items": {},
						"nullable": true
					},
					"delayAfter": {
						"nullable": true
					},
					"delayBefore": {
						"nullable": true
					},
					"delayAfterActual": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					},
					"delayBeforeActual": {
						"type": "integer",
						"format": "int32",
						"readOnly": true
					}
				},
				"additionalProperties": false
			},
			"TimeLineHandler": {
				"type": "object",
				"properties": {
					"handlerType": {
						"$ref": "#/components/schemas/HandlerType"
					},
					"initial": {
						"type": "string",
						"nullable": true
					},
					"utcTimeOn": {
						"$ref": "#/components/schemas/TimeSpan"
					},
					"utcTimeOff": {
						"$ref": "#/components/schemas/TimeSpan"
					},
					"utcTimeBlocks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TimeSpan"
						},
						"nullable": true
					},
					"handlerArgs": {
						"type": "object",
						"additionalProperties": {
							"nullable": true
						},
						"nullable": true
					},
					"loop": {
						"type": "boolean"
					},
					"timeLineEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TimeLineEvent"
						},
						"nullable": true
					},
					"scheduleType": {
						"$ref": "#/components/schemas/TimeLineScheduleType"
					},
					"schedule": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"TimeLineScheduleType": {
				"enum": ["Other", "Cron"],
				"type": "string"
			},
			"TimeLineStatus": {
				"enum": ["Run", "Stop"],
				"type": "string"
			},
			"Trip": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"destination": {
						"type": "string",
						"nullable": true
					},
					"arriveDestination": {
						"type": "string",
						"format": "date-time"
					},
					"departDestination": {
						"type": "string",
						"format": "date-time"
					}
				},
				"additionalProperties": false
			},
			"Unit": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"nullable": true
					},
					"nick": {
						"type": "string",
						"nullable": true
					},
					"hq": {
						"type": "string",
						"nullable": true
					},
					"sub": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Unit"
						},
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"UpDownStatus": {
				"enum": ["Unknown", "Up", "UpWithErrors", "Down", "DownWithErrors"],
				"type": "string"
			},
			"UpdateType": {
				"enum": ["TimeLine", "Health", "TimeLinePartial", "RequestForTimeLine"],
				"type": "string"
			},
			"WeaknessProfile": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"nullable": true
					}
				},
				"additionalProperties": false
			},
			"Webhook": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"status": {
						"$ref": "#/components/schemas/StatusType"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"postbackUrl": {
						"type": "string",
						"nullable": true
					},
					"postbackMethod": {
						"$ref": "#/components/schemas/WebhookMethod"
					},
					"postbackFormat": {
						"type": "string",
						"nullable": true
					},
					"createdUtc": {
						"type": "string",
						"format": "date-time"
					},
					"applicationUserId": {
						"type": "string",
						"format": "uuid"
					}
				},
				"additionalProperties": false
			},
			"WebhookMethod": {
				"enum": ["GET", "POST"],
				"type": "string"
			}
		}
	}
}
