@model Ghosts.Socializer.Infrastructure.ViewModels.SearchResultsViewModel
@{
    Layout = null;
    var query = Model?.Query ?? string.Empty;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search ‚Ä¢ Instagram</title>
    <link rel="stylesheet" href="css/profile.css">
    <style>
        body {
            background: #fafafa;
            font-family: 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            margin: 0;
        }
        .header {
            background: #fff;
            border-bottom: 1px solid #dbdbdb;
            padding: 16px 24px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .header .logo {
            font-size: 24px;
            font-weight: 600;
        }
        .search-container {
            max-width: 640px;
            margin: 32px auto;
            background: #fff;
            border: 1px solid #dbdbdb;
            padding: 24px;
            border-radius: 12px;
        }
        .search-form {
            display: flex;
            gap: 12px;
            margin-bottom: 24px;
        }
        .search-form input {
            flex: 1;
            padding: 12px 16px;
            border-radius: 8px;
            border: 1px solid #dbdbdb;
            background: #fafafa;
        }
        .search-form button {
            padding: 12px 20px;
            border-radius: 8px;
            border: none;
            background: #0095f6;
            color: #fff;
            font-weight: 600;
            cursor: pointer;
        }
        h2 {
            font-size: 16px;
            text-transform: uppercase;
            letter-spacing: .08em;
            margin-top: 32px;
            color: #8e8e8e;
        }
        .results-grid {
            display: grid;
            gap: 12px;
            margin-top: 12px;
        }
        .result-card {
            padding: 16px;
            border: 1px solid #dbdbdb;
            border-radius: 12px;
            background: #fff;
        }
        .result-card a {
            color: inherit;
            text-decoration: none;
        }
        .empty-state {
            padding: 16px;
            color: #8e8e8e;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">Instagram</div>
        <div class="nav-actions">
            <a href="/" class="action-btn">üè†</a>
            <a href="/messages" class="action-btn">üí¨</a>
            <a href="/profile" class="action-btn">üë§</a>
        </div>
    </div>

    <div class="search-container">
        <form class="search-form" method="get" action="/search">
            <input type="text" name="q" value="@query" placeholder="Search" />
            <button type="submit">Search</button>
        </form>

        <section>
            <h2>Accounts</h2>
            @if (Model?.HasQuery == true && Model.Users?.Count > 0)
            {
                <div class="results-grid">
                    @foreach (var user in Model.Users)
                    {
                        <div class="result-card">
                            <a href="/u/@user.Username">
                                <strong>@user.Username</strong><br />
                                <span>@(string.IsNullOrWhiteSpace(user.Bio) ? "No bio available." : user.Bio)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No accounts found.</div>
            }
            else
            {
                <div class="empty-state">Try searching for friends, hashtags, or keywords.</div>
            }
        </section>

        <section>
            <h2>Posts</h2>
            @if (Model?.HasQuery == true && Model.Posts?.Count > 0)
            {
                <div class="results-grid">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="result-card">
                            <a href="/posts/@post.Id">
                                <strong>@post.Username</strong><br />
                                <span>@Html.Raw(post.Message)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No posts found.</div>
            }
            else
            {
                <div class="empty-state">Search to discover new posts.</div>
            }
        </section>
    </div>

    <script src="/js/social.js"></script>
</body>
</html>
