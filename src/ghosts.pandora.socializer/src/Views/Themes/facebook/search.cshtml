@model Ghosts.Socializer.Infrastructure.ViewModels.SearchResultsViewModel
@{
    Layout = null;
    var query = Model?.Query ?? string.Empty;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Facebook Search - @query</title>
    <link rel="stylesheet" href="/themes/facebook/css/facebook.css">
    <link rel="icon" href="/themes/facebook/images/facebook-icon.png" type="image/png">
    <style>
        .search-container {
            max-width: 960px;
            margin: 24px auto;
            padding: 0 16px 40px;
        }
        .search-card {
            background: #fff;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.08);
            margin-bottom: 24px;
        }
        .search-form {
            display: flex;
            gap: 12px;
        }
        .search-form input[type="text"] {
            flex: 1;
            padding: 12px 16px;
            border: 1px solid #ccd0d5;
            border-radius: 999px;
            background: #f0f2f5;
            font-size: 15px;
        }
        .search-form button {
            padding: 12px 20px;
            border-radius: 999px;
            background: #1877f2;
            color: #fff;
            border: none;
            font-weight: 600;
            cursor: pointer;
        }
        h2.section-title {
            font-size: 18px;
            color: #1c1e21;
            margin-bottom: 12px;
        }
        .results-grid {
            display: grid;
            gap: 12px;
        }
        .result-item a {
            display: block;
            padding: 16px;
            border-radius: 10px;
            background: #f0f2f5;
            text-decoration: none;
            color: inherit;
        }
        .result-item a:hover {
            background: #e4e6eb;
        }
        .empty-state {
            padding: 16px;
            color: #65676b;
        }
    </style>
</head>
<body data-theme="facebook">
    <header class="header">
        <div class="header-left">
            <a href="/" class="logo">facebook</a>
            <form action="/search">
                <input type="text" name="q" class="search-bar" placeholder="Search Facebook">
            </form>
        </div>

        <div class="header-center">
            <a href="/" class="nav-item">üè†</a>
            <a href="#" class="nav-item">üì∫</a>
            <a href="#" class="nav-item">üõçÔ∏è</a>
            <a href="#" class="nav-item">üë•</a>
            <a href="#" class="nav-item">üéÆ</a>
        </div>

        <div class="header-right">
            <button class="icon-btn">‚äï</button>
            <a href="/messages" class="icon-btn">üí¨</a>
            <button class="icon-btn">üîî</button>
            <a href="/profile"><img src="/u/@ViewBag.Username/avatar" alt="Profile" class="profile-pic"></a>
        </div>
    </header>

    <div class="search-container">
        <div class="search-card">
            <form class="search-form" method="get" action="/search">
                <input type="text" name="q" value="@query" placeholder="Search Facebook" />
                <button type="submit">Search</button>
            </form>
        </div>

        <div class="search-card">
            <h2 class="section-title">People</h2>
            @if (Model is { HasQuery: true, Users.Count: > 0 })
            {
                <div class="results-grid">
                    @foreach (var user in Model.Users)
                    {
                        <div class="result-item">
                            <a href="/u/@user.Username">
                                <strong>@user.Username</strong><br />
                                <span>@(string.IsNullOrWhiteSpace(user.Bio) ? "No bio provided." : user.Bio)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No people found.</div>
            }
            else
            {
                <div class="empty-state">Start typing to search for people.</div>
            }
        </div>

        <div class="search-card">
            <h2 class="section-title">Posts</h2>
            @if (Model?.HasQuery == true && Model.Posts?.Count > 0)
            {
                <div class="results-grid">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="result-item">
                            <a href="/posts/@post.Id">
                                <strong>@post.Username</strong><br />
                                <span>@Html.Raw(post.Message)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No posts found.</div>
            }
            else
            {
                <div class="empty-state">Start typing to search for posts.</div>
            }
        </div>
    </div>

    <script src="/js/social.js"></script>
</body>
</html>
