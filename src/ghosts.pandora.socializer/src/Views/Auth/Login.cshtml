@using System.Collections.Generic
@{
    Layout = null;
    var themes = ViewBag.Themes as List<string> ?? new List<string>();
    var selectedTheme = ViewBag.SelectedTheme as string ?? "default";
    var returnUrl = ViewBag.ReturnUrl as string ?? "/";
    var error = ViewBag.Error as string;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Sign In</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" />
    <style>
        body {
            margin: 0;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0f172a;
            color: #e2e8f0;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }
        .card {
            background: rgba(15, 23, 42, 0.85);
            border: 1px solid rgba(148, 163, 184, 0.2);
            border-radius: 16px;
            padding: 32px;
            width: min(420px, 90vw);
            box-shadow: 0 20px 60px rgba(15, 23, 42, 0.6);
            backdrop-filter: blur(8px);
        }
        h1 {
            margin-top: 0;
            margin-bottom: 8px;
            font-size: 28px;
            font-weight: 600;
        }
        p {
            margin-top: 0;
            margin-bottom: 24px;
            color: #94a3b8;
            font-size: 15px;
        }
        .field {
            display: flex;
            flex-direction: column;
            margin-bottom: 20px;
        }
        label {
            font-weight: 600;
            margin-bottom: 8px;
        }
        input[type="text"],
        select {
            padding: 14px 16px;
            border-radius: 10px;
            border: 1px solid rgba(148, 163, 184, 0.3);
            background: rgba(15, 23, 42, 0.6);
            color: #e2e8f0;
            font-size: 15px;
        }
        input[type="text"]:focus,
        select:focus {
            outline: none;
            border-color: #38bdf8;
            box-shadow: 0 0 0 3px rgba(56, 189, 248, 0.35);
        }
        button {
            width: 100%;
            padding: 14px 16px;
            font-size: 16px;
            font-weight: 600;
            border-radius: 10px;
            border: none;
            background: linear-gradient(135deg, #38bdf8, #0ea5e9);
            color: #0f172a;
            cursor: pointer;
            transition: transform 0.15s ease, box-shadow 0.15s ease;
        }
        button:hover {
            transform: translateY(-1px);
            box-shadow: 0 12px 30px rgba(14, 165, 233, 0.35);
        }
        .error {
            background: rgba(248, 113, 113, 0.2);
            border: 1px solid rgba(248, 113, 113, 0.45);
            color: #fecaca;
            padding: 12px 16px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-size: 14px;
        }
        .helper {
            margin-top: 16px;
            font-size: 14px;
            color: #94a3b8;
        }
        a {
            color: #38bdf8;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="card">
        <h1>Welcome back</h1>
        <p>Sign in with any username to simulate the social login flow.</p>

        @if (!string.IsNullOrEmpty(error))
        {
            <div class="error">@error</div>
        }

        <form method="post" action="/login">
            <input type="hidden" name="ReturnUrl" value="@returnUrl" />

            <div class="field">
                <label for="Username">Username</label>
                <input type="text" id="Username" name="Username" placeholder="e.g. agent_47" value="@ViewBag.Username" autocomplete="nickname" />
            </div>

            <div class="field">
                <label for="Theme">Theme</label>
                <select id="Theme" name="Theme">
                    @foreach (var theme in themes)
                    {
                        var isSelected = string.Equals(theme, selectedTheme, StringComparison.OrdinalIgnoreCase);
                        <option value="@theme" selected="@(isSelected ? "selected" : null)">@theme</option>
                    }
                    @if (!themes.Contains("default"))
                    {
                        var isDefaultSelected = string.Equals("default", selectedTheme, StringComparison.OrdinalIgnoreCase);
                        <option value="default" selected="@(isDefaultSelected ? "selected" : null)">default</option>
                    }
                </select>
            </div>

            <button type="submit">Log In</button>
        </form>

        <div class="helper">
            Need to create a user? Just choose a username and sign in â€” a profile is created automatically.
        </div>
    </div>
</body>
</html>
