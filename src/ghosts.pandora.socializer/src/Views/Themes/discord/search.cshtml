@model Ghosts.Socializer.Infrastructure.ViewModels.SearchResultsViewModel
@{
    Layout = null;
    var query = Model?.Query ?? string.Empty;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Discord Search</title>
    <link rel="stylesheet" href="css/profile.css">
    <style>
        body {
            background: #2f3136;
            color: #dcddde;
            font-family: 'Roboto', sans-serif;
            margin: 0;
        }
        .search-wrapper {
            max-width: 960px;
            margin: 32px auto;
            padding: 0 16px 40px;
        }
        .search-card {
            background: #36393f;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
            margin-bottom: 24px;
        }
        .search-form {
            display: flex;
            gap: 12px;
        }
        .search-form input {
            flex: 1;
            background: #40444b;
            border-radius: 8px;
            border: none;
            padding: 12px;
            color: #dcddde;
        }
        .search-form button {
            background: #5865f2;
            border: none;
            border-radius: 8px;
            color: #fff;
            font-weight: 600;
            padding: 12px 20px;
            cursor: pointer;
        }
        .results-grid {
            display: grid;
            gap: 12px;
        }
        .result-card {
            background: #202225;
            border-radius: 8px;
            padding: 16px;
        }
        .result-card a {
            color: inherit;
            text-decoration: none;
        }
        .empty-state {
            color: #72767d;
        }
    </style>
</head>
<body>
    <div class="search-wrapper">
        <div class="search-card">
            <h2>Search Discord</h2>
            <form class="search-form" method="get" action="/search">
                <input type="text" name="q" value="@query" placeholder="Search for users or messages" />
                <button type="submit">Search</button>
            </form>
        </div>

        <div class="search-card">
            <h3>Users</h3>
            @if (Model?.HasQuery == true && Model.Users?.Count > 0)
            {
                <div class="results-grid">
                    @foreach (var user in Model.Users)
                    {
                        <div class="result-card">
                            <a href="/u/@user.Username">
                                <strong>@user.Username</strong><br />
                                <span>@(string.IsNullOrWhiteSpace(user.Bio) ? "No status." : user.Bio)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No users found.</div>
            }
            else
            {
                <div class="empty-state">Search the community for members.</div>
            }
        </div>

        <div class="search-card">
            <h3>Messages</h3>
            @if (Model?.HasQuery == true && Model.Posts?.Count > 0)
            {
                <div class="results-grid">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="result-card">
                            <a href="/posts/@post.Id">
                                <strong>@post.Username</strong><br />
                                <span>@Html.Raw(post.Message)</span>
                            </a>
                        </div>
                    }
                </div>
            }
            else if (Model?.HasQuery == true)
            {
                <div class="empty-state">No messages matched "@query".</div>
            }
            else
            {
                <div class="empty-state">Search to find messages.</div>
            }
        </div>
    </div>

    <script src="/js/social.js"></script>
</body>
</html>
